openapi: 3.0.2
info:
  title: Example
  description: "Based the project on https://reflectoring.io/spring-boot-openapi/"
  termsOfService: http://swagger.io/terms/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1-SNAPSHOT
paths:
  /persons/{name}:
    get:
      operationId: getPersonByName
      parameters:
        - name: name
          in: path
          description: Path parameter of the persons name that is used to identify him/her.
          required: true
          schema:
            type:
              string
      responses:
        200:
          description: We could find this person, so we return his information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        401:
          description: We could not find this person.
    put:
      operationId: updatePerson
      parameters:
        - name: name
          in: path
          description: Path parameter of the persons name that is used to identify him/her.
          required: true
          schema:
            type:
              string
      requestBody:
        description: The object to update.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/person"
      responses:
        200:
          description: Person has been updated succesfully.
  /persons:
    get:
      operationId: getPersons
      tags:
        - examples
      parameters:
        - name: listHasItems
          in: query
          required: false
          description: Optional parameter to test the non existing use case.
          schema:
            type: boolean
      responses:
        200:
          description: List of persons could be retrieved.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/persons"
components:
  schemas:
    person:
      type: object
      properties:
        name:
          type: string
        favouritenumber:
          description: The persons favourite number under ten.
          type: number
          minimum: 1
          maximum: 9
        birthtimestamp:
          type: string
          format: date-time
          description: Timestamp in ISO-8601 format.
      required:
        - name
        - favouritenumber
        - birthtimestamp
    persons:
      type: array
      items:
        $ref: "#/components/schemas/person"
